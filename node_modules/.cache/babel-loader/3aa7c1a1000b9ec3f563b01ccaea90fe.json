{"ast":null,"code":"import blogs from \"../data/blog.json\";\n\nfunction getBlog(id) {\n  return blogs.filter(blog => {\n    return blog.id === parseInt(id);\n  })[0];\n}\n\nfunction getFilteredPosts(posts, filter = {\n  cat: '',\n  tag: '',\n  author: ''\n}) {\n  var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\n  var tagFilter = filter.tag !== undefined && filter.tag !== null && filter.tag !== '';\n  var authorFilter = filter.author !== undefined && filter.author !== null && filter.author !== ''; // Category filter\n\n  if (catgoryFilter) {\n    posts = posts.filter(post => {\n      return post.categories !== undefined && post.categories !== null && post.categories.includes(parseInt(filter.cat));\n    });\n  } // Tag filter\n\n\n  if (tagFilter) {\n    posts = posts.filter(post => {\n      return post.tags !== undefined && post.tags !== null && post.tags.includes(parseInt(filter.tag));\n    });\n  } // Author filter\n\n\n  if (authorFilter) {\n    posts = posts.filter(post => {\n      return post.author !== undefined && post.author !== null && post.author.includes(parseInt(filter.author));\n    });\n  }\n\n  return posts;\n}\n\nexport { getBlog, getFilteredPosts };","map":{"version":3,"sources":["C:/Users/osos1/Downloads/reservation CTRL +/theme/miranda/miranda-product/src/helper/Bloghelper.js"],"names":["blogs","getBlog","id","filter","blog","parseInt","getFilteredPosts","posts","cat","tag","author","catgoryFilter","undefined","tagFilter","authorFilter","post","categories","includes","tags"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,mBAAlB;;AAEA,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AACjB,SAAOF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAI;AAAE,WAAOA,IAAI,CAACF,EAAL,KAAYG,QAAQ,CAACH,EAAD,CAA3B;AAAiC,GAAxD,EAA0D,CAA1D,CAAP;AAEH;;AACD,SAASI,gBAAT,CAA0BC,KAA1B,EAAiCJ,MAAM,GAAG;AAAEK,EAAAA,GAAG,EAAC,EAAN;AAAUC,EAAAA,GAAG,EAAC,EAAd;AAAkBC,EAAAA,MAAM,EAAC;AAAzB,CAA1C,EAAyE;AACrE,MAAIC,aAAa,GAAGR,MAAM,CAACK,GAAP,KAAeI,SAAf,IAA4BT,MAAM,CAACK,GAAP,KAAe,IAA3C,IAAmDL,MAAM,CAACK,GAAP,KAAe,EAAtF;AACA,MAAIK,SAAS,GAAGV,MAAM,CAACM,GAAP,KAAeG,SAAf,IAA4BT,MAAM,CAACM,GAAP,KAAe,IAA3C,IAAmDN,MAAM,CAACM,GAAP,KAAe,EAAlF;AACA,MAAIK,YAAY,GAAGX,MAAM,CAACO,MAAP,KAAkBE,SAAlB,IAA+BT,MAAM,CAACO,MAAP,KAAkB,IAAjD,IAAyDP,MAAM,CAACO,MAAP,KAAkB,EAA9F,CAHqE,CAIrE;;AACA,MAAIC,aAAJ,EAAmB;AACfJ,IAAAA,KAAK,GAAGA,KAAK,CAACJ,MAAN,CAAaY,IAAI,IAAI;AACzB,aAAQA,IAAI,CAACC,UAAL,KAAoBJ,SAApB,IAAiCG,IAAI,CAACC,UAAL,KAAoB,IAAtD,IAA+DD,IAAI,CAACC,UAAL,CAAgBC,QAAhB,CAAyBZ,QAAQ,CAACF,MAAM,CAACK,GAAR,CAAjC,CAAtE;AACH,KAFO,CAAR;AAGH,GAToE,CAUrE;;;AACA,MAAIK,SAAJ,EAAe;AACXN,IAAAA,KAAK,GAAGA,KAAK,CAACJ,MAAN,CAAaY,IAAI,IAAI;AACzB,aAAQA,IAAI,CAACG,IAAL,KAAcN,SAAd,IAA2BG,IAAI,CAACG,IAAL,KAAc,IAA1C,IAAmDH,IAAI,CAACG,IAAL,CAAUD,QAAV,CAAmBZ,QAAQ,CAACF,MAAM,CAACM,GAAR,CAA3B,CAA1D;AACH,KAFO,CAAR;AAGH,GAfoE,CAgBrE;;;AACA,MAAIK,YAAJ,EAAkB;AACdP,IAAAA,KAAK,GAAGA,KAAK,CAACJ,MAAN,CAAaY,IAAI,IAAI;AACzB,aAAQA,IAAI,CAACL,MAAL,KAAgBE,SAAhB,IAA6BG,IAAI,CAACL,MAAL,KAAgB,IAA9C,IAAuDK,IAAI,CAACL,MAAL,CAAYO,QAAZ,CAAqBZ,QAAQ,CAACF,MAAM,CAACO,MAAR,CAA7B,CAA9D;AACH,KAFO,CAAR;AAGH;;AAED,SAAOH,KAAP;AACH;;AAED,SAASN,OAAT,EAAkBK,gBAAlB","sourcesContent":["import blogs from \"../data/blog.json\";\r\n\r\nfunction getBlog(id) {\r\n    return blogs.filter(blog => { return blog.id === parseInt(id) })[0];\r\n\r\n}\r\nfunction getFilteredPosts(posts, filter = { cat:'', tag:'', author:'' }) {\r\n    var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\r\n    var tagFilter = filter.tag !== undefined && filter.tag !== null && filter.tag !== '';\r\n    var authorFilter = filter.author !== undefined && filter.author !== null && filter.author !== '';\r\n    // Category filter\r\n    if (catgoryFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.categories !== undefined && post.categories !== null) && post.categories.includes(parseInt(filter.cat))\r\n        })\r\n    }\r\n    // Tag filter\r\n    if (tagFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.tags !== undefined && post.tags !== null) && post.tags.includes(parseInt(filter.tag))\r\n        })\r\n    }\r\n    // Author filter\r\n    if (authorFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.author !== undefined && post.author !== null) && post.author.includes(parseInt(filter.author))\r\n        })\r\n    }\r\n\r\n    return posts;\r\n}\r\n\r\nexport { getBlog, getFilteredPosts };"]},"metadata":{},"sourceType":"module"}