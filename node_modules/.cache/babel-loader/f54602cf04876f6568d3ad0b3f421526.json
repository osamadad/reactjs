{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osos1\\\\Downloads\\\\reservation CTRL +\\\\theme\\\\miranda\\\\miranda-product\\\\src\\\\components\\\\sections\\\\home\\\\Roomslider.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Slider from \"react-slick\";\nimport rooms from '../../../data/room.json';\nimport roomcategory from '../../../data/roomcategory.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Roomslider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nav1: null,\n      nav2: null,\n      updateCount: 1\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      nav1: this.slider1,\n      nav2: this.slider2\n    });\n  }\n\n  render() {\n    const settings = {\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      fade: false,\n      infinite: true,\n      autoplay: true,\n      autoplaySpeed: 4000,\n      arrows: false,\n      dots: false,\n      centerMode: true,\n      centerPadding: '6%',\n      afterChange: () => this.setState(state => ({\n        updateCount: state.updateCount + 1\n      })),\n      responsive: [{\n        breakpoint: 1600,\n        settings: {\n          slidesToShow: 2\n        }\n      }, {\n        breakpoint: 992,\n        settings: {\n          slidesToShow: 1,\n          centerPadding: '15%'\n        }\n      }]\n    };\n    const settingsThumb = {\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      fade: false,\n      infinite: true,\n      autoplay: true,\n      autoplaySpeed: 4000,\n      arrows: false,\n      dots: true\n    };\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"room-slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid p-0\",\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          className: \"row rooms-slider-one\",\n          asNavFor: this.state.nav2,\n          ref: slider => this.slider1 = slider,\n          ...settings,\n          children: rooms.slice(0, 5).map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-img\",\n              style: {\n                backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/\" + item.sliderimage + \")\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rooms-content-wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center justify-content-md-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-4 col-lg-5 col-sm-8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"room-content-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slider-count\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"current\",\n                    children: this.state.updateCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 41\n                  }, this), \"/ \", rooms.slice(0, 5).length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slider-count-big\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                  className: \"room-content-slider\",\n                  asNavFor: this.state.nav1,\n                  ref: slider => this.slider2 = slider,\n                  ...settingsThumb,\n                  children: rooms.slice(0, 5).map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"single-content\",\n                    children: [item.category.slice(0, 1).map(category => roomcategory.filter(item => {\n                      return item.id === category;\n                    }).map((category, i) => /*#__PURE__*/_jsxDEV(Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"icon\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: category.icon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 94,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                        children: /*#__PURE__*/_jsxDEV(Link, {\n                          to: \"/room-details/\" + item.id,\n                          children: category.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 96,\n                        columnNumber: 61\n                      }, this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 57\n                    }, this))), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [item.text.slice(0, 100), \"...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 49\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Roomslider;","map":{"version":3,"sources":["C:/Users/osos1/Downloads/reservation CTRL +/theme/miranda/miranda-product/src/components/sections/home/Roomslider.js"],"names":["React","Component","Fragment","Link","Slider","rooms","roomcategory","Roomslider","constructor","props","state","nav1","nav2","updateCount","componentDidMount","setState","slider1","slider2","render","settings","slidesToShow","slidesToScroll","fade","infinite","autoplay","autoplaySpeed","arrows","dots","centerMode","centerPadding","afterChange","responsive","breakpoint","settingsThumb","slider","slice","map","item","i","backgroundImage","process","env","PUBLIC_URL","sliderimage","length","category","filter","id","icon","title","text"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from \"react-slick\";\r\nimport rooms from '../../../data/room.json'\r\nimport roomcategory from '../../../data/roomcategory.json'\r\n\r\nclass Roomslider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nav1: null,\r\n            nav2: null,\r\n            updateCount: 1\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            nav1: this.slider1,\r\n            nav2: this.slider2\r\n        });\r\n    }\r\n    render() {\r\n        const settings = {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            fade: false,\r\n            infinite: true,\r\n            autoplay: true,\r\n            autoplaySpeed: 4000,\r\n            arrows: false,\r\n            dots: false,\r\n            centerMode: true,\r\n            centerPadding: '6%',\r\n            afterChange: () => this.setState(state => ({ updateCount: state.updateCount + 1 })),\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 992,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        centerPadding: '15%',\r\n                    },\r\n                },\r\n            ]\r\n        };\r\n        const settingsThumb = {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            fade: false,\r\n            infinite: true,\r\n            autoplay: true,\r\n            autoplaySpeed: 4000,\r\n            arrows: false,\r\n            dots: true\r\n        };\r\n        return (\r\n            <section className=\"room-slider\">\r\n                <div className=\"container-fluid p-0\">\r\n                    <Slider className=\"row rooms-slider-one\" asNavFor={this.state.nav2}\r\n                        ref={slider => (this.slider1 = slider)} {...settings} >\r\n                        {rooms.slice(0, 5).map((item, i) => (\r\n                            <div key={i} className=\"col\">\r\n                                <div className=\"slider-img\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/\" + item.sliderimage + \")\" }}>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </Slider>\r\n                </div>\r\n                <div className=\"rooms-content-wrap\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center justify-content-md-start\">\r\n                            <div className=\"col-xl-4 col-lg-5 col-sm-8\">\r\n                                <div className=\"room-content-box\">\r\n                                    <div className=\"slider-count\">\r\n                                        <span className=\"current\">{this.state.updateCount}</span>/ {rooms.slice(0, 5).length}\r\n                                    </div>\r\n                                    <div className=\"slider-count-big\" />\r\n                                    <Slider className=\"room-content-slider\"\r\n                                        asNavFor={this.state.nav1}\r\n                                        ref={slider => (this.slider2 = slider)} {...settingsThumb} >\r\n                                        {rooms.slice(0, 5).map((item, i) => (\r\n                                            <div key={i} className=\"single-content\">\r\n                                                {item.category.slice(0, 1).map((category) => (\r\n                                                    roomcategory.filter(item => {\r\n                                                        return item.id === category\r\n                                                    }).map((category, i) => (\r\n                                                        <Fragment key={i}>\r\n                                                            <div className=\"icon\">\r\n                                                                <i className={category.icon} />\r\n                                                            </div>\r\n                                                            <h3><Link to={\"/room-details/\" + item.id}>{category.title}</Link></h3>\r\n                                                        </Fragment>\r\n                                                    ))\r\n                                                ))}\r\n                                                <p>{item.text.slice(0,100)}...</p>\r\n                                            </div>\r\n                                        ))}\r\n                                    </Slider>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roomslider;"]},"metadata":{},"sourceType":"module"}