{"ast":null,"code":"import blogs from\"../data/blog.json\";function getBlog(id){return blogs.filter(function(blog){return blog.id===parseInt(id);})[0];}function getFilteredPosts(posts){var filter=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{cat:'',tag:'',author:''};var catgoryFilter=filter.cat!==undefined&&filter.cat!==null&&filter.cat!=='';var tagFilter=filter.tag!==undefined&&filter.tag!==null&&filter.tag!=='';var authorFilter=filter.author!==undefined&&filter.author!==null&&filter.author!=='';// Category filter\nif(catgoryFilter){posts=posts.filter(function(post){return post.categories!==undefined&&post.categories!==null&&post.categories.includes(parseInt(filter.cat));});}// Tag filter\nif(tagFilter){posts=posts.filter(function(post){return post.tags!==undefined&&post.tags!==null&&post.tags.includes(parseInt(filter.tag));});}// Author filter\nif(authorFilter){posts=posts.filter(function(post){return post.author!==undefined&&post.author!==null&&post.author.includes(parseInt(filter.author));});}return posts;}export{getBlog,getFilteredPosts};","map":{"version":3,"sources":["C:/Users/osos1/reservation-plus/src/helper/Bloghelper.js"],"names":["blogs","getBlog","id","filter","blog","parseInt","getFilteredPosts","posts","cat","tag","author","catgoryFilter","undefined","tagFilter","authorFilter","post","categories","includes","tags"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,mBAAlB,CAEA,QAASC,CAAAA,OAAT,CAAiBC,EAAjB,CAAqB,CACjB,MAAOF,CAAAA,KAAK,CAACG,MAAN,CAAa,SAAAC,IAAI,CAAI,CAAE,MAAOA,CAAAA,IAAI,CAACF,EAAL,GAAYG,QAAQ,CAACH,EAAD,CAA3B,CAAiC,CAAxD,EAA0D,CAA1D,CAAP,CAEH,CACD,QAASI,CAAAA,gBAAT,CAA0BC,KAA1B,CAAyE,IAAxCJ,CAAAA,MAAwC,2DAA/B,CAAEK,GAAG,CAAC,EAAN,CAAUC,GAAG,CAAC,EAAd,CAAkBC,MAAM,CAAC,EAAzB,CAA+B,CACrE,GAAIC,CAAAA,aAAa,CAAGR,MAAM,CAACK,GAAP,GAAeI,SAAf,EAA4BT,MAAM,CAACK,GAAP,GAAe,IAA3C,EAAmDL,MAAM,CAACK,GAAP,GAAe,EAAtF,CACA,GAAIK,CAAAA,SAAS,CAAGV,MAAM,CAACM,GAAP,GAAeG,SAAf,EAA4BT,MAAM,CAACM,GAAP,GAAe,IAA3C,EAAmDN,MAAM,CAACM,GAAP,GAAe,EAAlF,CACA,GAAIK,CAAAA,YAAY,CAAGX,MAAM,CAACO,MAAP,GAAkBE,SAAlB,EAA+BT,MAAM,CAACO,MAAP,GAAkB,IAAjD,EAAyDP,MAAM,CAACO,MAAP,GAAkB,EAA9F,CACA;AACA,GAAIC,aAAJ,CAAmB,CACfJ,KAAK,CAAGA,KAAK,CAACJ,MAAN,CAAa,SAAAY,IAAI,CAAI,CACzB,MAAQA,CAAAA,IAAI,CAACC,UAAL,GAAoBJ,SAApB,EAAiCG,IAAI,CAACC,UAAL,GAAoB,IAAtD,EAA+DD,IAAI,CAACC,UAAL,CAAgBC,QAAhB,CAAyBZ,QAAQ,CAACF,MAAM,CAACK,GAAR,CAAjC,CAAtE,CACH,CAFO,CAAR,CAGH,CACD;AACA,GAAIK,SAAJ,CAAe,CACXN,KAAK,CAAGA,KAAK,CAACJ,MAAN,CAAa,SAAAY,IAAI,CAAI,CACzB,MAAQA,CAAAA,IAAI,CAACG,IAAL,GAAcN,SAAd,EAA2BG,IAAI,CAACG,IAAL,GAAc,IAA1C,EAAmDH,IAAI,CAACG,IAAL,CAAUD,QAAV,CAAmBZ,QAAQ,CAACF,MAAM,CAACM,GAAR,CAA3B,CAA1D,CACH,CAFO,CAAR,CAGH,CACD;AACA,GAAIK,YAAJ,CAAkB,CACdP,KAAK,CAAGA,KAAK,CAACJ,MAAN,CAAa,SAAAY,IAAI,CAAI,CACzB,MAAQA,CAAAA,IAAI,CAACL,MAAL,GAAgBE,SAAhB,EAA6BG,IAAI,CAACL,MAAL,GAAgB,IAA9C,EAAuDK,IAAI,CAACL,MAAL,CAAYO,QAAZ,CAAqBZ,QAAQ,CAACF,MAAM,CAACO,MAAR,CAA7B,CAA9D,CACH,CAFO,CAAR,CAGH,CAED,MAAOH,CAAAA,KAAP,CACH,CAED,OAASN,OAAT,CAAkBK,gBAAlB","sourcesContent":["import blogs from \"../data/blog.json\";\r\n\r\nfunction getBlog(id) {\r\n    return blogs.filter(blog => { return blog.id === parseInt(id) })[0];\r\n\r\n}\r\nfunction getFilteredPosts(posts, filter = { cat:'', tag:'', author:'' }) {\r\n    var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\r\n    var tagFilter = filter.tag !== undefined && filter.tag !== null && filter.tag !== '';\r\n    var authorFilter = filter.author !== undefined && filter.author !== null && filter.author !== '';\r\n    // Category filter\r\n    if (catgoryFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.categories !== undefined && post.categories !== null) && post.categories.includes(parseInt(filter.cat))\r\n        })\r\n    }\r\n    // Tag filter\r\n    if (tagFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.tags !== undefined && post.tags !== null) && post.tags.includes(parseInt(filter.tag))\r\n        })\r\n    }\r\n    // Author filter\r\n    if (authorFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.author !== undefined && post.author !== null) && post.author.includes(parseInt(filter.author))\r\n        })\r\n    }\r\n\r\n    return posts;\r\n}\r\n\r\nexport { getBlog, getFilteredPosts };"]},"metadata":{},"sourceType":"module"}